# .circleci/bulk.yml
version: 2.1

executors:
  # osx-arm64:
  #   macos:
  #     xcode: 14.2.0 # indicate your selected version of Xcode
  #   resource_class: macos.m1.large.gen1
  linux-aarch64:
    docker:
      - image: cimg/base:2023.06
    resource_class: arm.medium

jobs: # a basic unit of work in a run
  bulk_build:
    parameters:
      os:
        type: executor
      runner:
        type: integer
    executor: << parameters.os >>
    parallelism: 6
    # strategy:
    #   fail-fast: false
    steps:
        #   - uses: actions/checkout@v3
        # with:
        #   # checkout as bioconda-bot in order to have the permission to push fail logs
        #   token: ${{secrets.BIOCONDA_BOT_REPO_TOKEN}}
      - checkout

      - run:
          name: Check for [ci run]
          command: |
            commit_message="$(git log --format=oneline -n 1 $CIRCLE_SHA1)"
            if [[ $commit_message  =~ "[ci run]" ]]; then
              echo "[ci run] found, continuing."
            else
              echo "[ci run] not found, exiting."
              circleci-agent step halt
            fi

      - run:
          name: set git user
          command: |
            git config user.name bioconda-bot
            git config user.email bioconda-bot@users.noreply.github.com

      - run:
          name: Fetch bioconda install script
          command: wget https://raw.githubusercontent.com/bioconda/bioconda-common/bulk/{common,install-and-set-up-conda,configure-conda}.sh

      - restore_cache:
          keys:
            - bioconda-utils-{{ arch }}-bulk--{{ checksum "install-and-set-up-conda.sh" }}-{{ checksum "configure-conda.sh" }}-{{ checksum "common.sh" }}

      - run:
          name: Install bioconda-utils
          command: |
            sudo mkdir -p /opt/
            sudo chmod o+rwx /opt
            bash install-and-set-up-conda.sh

      - save_cache:
          key: bioconda-utils-{{ arch }}--bulk--{{ checksum "install-and-set-up-conda.sh" }}-{{ checksum "configure-conda.sh" }}-{{ checksum "common.sh" }}
          paths:
            - /opt/mambaforge/
    
      - run:
          name: Setup PATH
          command:
            echo 'export PATH=/opt/mambaforge/bin:"$PATH"' >> "$BASH_ENV"

      # We reconfigure conda to use the right channel setup.
      # This has to be done after the cache is restored, because
      # the channel setup is not cached as it resides in the home directory.
      # We could use a system-wide (and therefore cached) channel setup,
      # but mamba does not support that at the time of implementation
      # (it ignores settings made by --system).
      - run:
          name: Configure conda
          command: bash configure-conda.sh

      - run:
          name: Build and upload
          command: |
            source /opt/mambaforge/etc/profile.d/conda.sh
            source /opt/mambaforge/etc/profile.d/mamba.sh
            mamba activate bioconda
            echo '============'
            conda info --all
            conda config --show-sources
            python -c 'import bioconda_utils.utils as u ; import pathlib as p ; print(*(f"{f}:\n{p.Path(f).read_text()}" for f in u.load_conda_build_config().exclusive_config_files), sep="\n")'
            echo '============'
            # ALICIA: uncomment all the following:
            # bioconda-utils build recipes config.yml \
            #   --worker-offset ${{ parameter.runner }} --n-workers 6 \
            #   --docker --mulled-test --anaconda-upload --mulled-upload-target biocontainers \
            #   --record-build-failures --skiplist-leafs
            # conda clean -y --all

workflows:
  Bulk branch (ARM):
    jobs:
      - bulk_build:
          filters:
            branches:
              only: bulk
          matrix:
            parameters:
              os: 
                #- osx-arm64
                - linux-aarch64
              runner:
                - 0
                - 1
                - 2
                - 3
                - 4
                - 5

