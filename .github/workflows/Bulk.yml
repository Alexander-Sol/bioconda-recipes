name: Bulk branch
on:
  push:
    branches:
      - bulk
      - bulk-demo
jobs:
  build-linux:
    name: Bulk Linux Builds
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 13
      matrix:
        runner: [0] #, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12] #, 13, 14, 15, 16, 17, 18, 19]
    steps:
    - uses: actions/checkout@v3

    - name: set path
      run: echo "/miniconda/bin" >> $GITHUB_PATH

    - name: Fetch conda install script
      run: |
        wget https://raw.githubusercontent.com/bioconda/bioconda-common/bulk/install-and-set-up-conda.sh

    - name: Restore cache
      id: cache
      uses: actions/cache@v3
      with:
        path: ${HOME}/miniconda
        key: ${{ runner.os }}--bulk--${{ hashFiles('**/install-and-set-up-conda.sh') }}

    - name: Setup Bioconda-utils
      if: steps.cache.outputs.cache-hit != 'true'
      run: bash install-and-set-up-conda.sh

    - name: Build and upload
      env:
        ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        INVOLUCRO_AUTH: ${{ secrets.INVOLUCRO_AUTH }}
        QUAY_OAUTH_TOKEN: ${{ secrets.QUAY_OAUTH_TOKEN }}
        # Mimic circleci
        OSTYPE: "linux-gnu"
        CI: "true"
      run: |
        ls ${HOME}/miniconda/
        ls ${HOME}/miniconda/etc
        ls ${HOME}/miniconda/etc/profile.d
        . ${HOME}/miniconda/etc/profile.d/conda.sh
        conda activate bioconda
        echo '============'
        conda info --all
        conda config --show-sources
        python -c 'import bioconda_utils.utils as u ; import pathlib as p ; print(*(f"{f}:\n{p.Path(f).read_text()}" for f in u.load_conda_build_config().exclusive_config_files), sep="\n")'
        echo '============'
        bioconda-utils build recipes config.yml \
          --worker-offset ${{ matrix.runner }} --n-workers 1 \
          --packages samtools \
          --force \
          --docker --mulled-test
        conda clean -y --all

  build-osx:
    name: Bulk OSX Builds
    runs-on: macOS-latest
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        runner: [0] # 1, 2, 3]
    steps:
    - uses: actions/checkout@v3

    - name: set path
      run: echo "/miniconda/bin" >> $GITHUB_PATH

    - name: Fetch conda install script
      run: |
        wget https://raw.githubusercontent.com/bioconda/bioconda-common/bulk/install-and-set-up-conda.sh

    - name: Restore cache
      id: cache
      uses: actions/cache@v3
      with:
        path: ${HOME}/miniconda
        key: ${{ runner.os }}--bulk--${{ hashFiles('**/install-and-set-up-conda.sh') }}

    - name: OSX stuff
      if: steps.cache.outputs.cache-hit != 'true'
      run: bash install-and-set-up-conda.sh

    - name: Build and upload
      env:
        ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        INVOLUCRO_AUTH: ${{ secrets.INVOLUCRO_AUTH }}
        QUAY_OAUTH_TOKEN: ${{ secrets.QUAY_OAUTH_TOKEN }}
        # Mimic circleci
        OSTYPE: "darwin"
        CI: "true"
      run: |
        . ${HOME}/miniconda/etc/profile.d/conda.sh
        conda activate bioconda

        # The SDK isn't actually cached, so reinstall it
        run_conda_forge_build_setup
        echo '============'
        conda info --all
        conda config --show-sources
        conda activate bioconda
        python -c 'import bioconda_utils.utils as u ; import pathlib as p ; print(*(f"{f}:\n{p.Path(f).read_text()}" for f in u.load_conda_build_config().exclusive_config_files), sep="\n")'
        echo '============'
        bioconda-utils build recipes config.yml \
          --worker-offset ${{ matrix.runner }} --n-workers 1 \
          --packages samtools \
          --force
        conda clean -y --all
